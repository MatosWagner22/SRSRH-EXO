// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SRSRH_EXO.DatabaseContext;

#nullable disable

namespace SRSRH_EXO.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250518201944_FixPuestoRelationships")]
    partial class FixPuestoRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CandidatoCapacitacion", b =>
                {
                    b.Property<int>("CandidatosId")
                        .HasColumnType("int");

                    b.Property<int>("CapacitacionesId")
                        .HasColumnType("int");

                    b.HasKey("CandidatosId", "CapacitacionesId");

                    b.HasIndex("CapacitacionesId");

                    b.ToTable("CandidatoCapacitaciones", (string)null);
                });

            modelBuilder.Entity("CandidatoCompetencia", b =>
                {
                    b.Property<int>("CandidatosId")
                        .HasColumnType("int");

                    b.Property<int>("CompetenciasId")
                        .HasColumnType("int");

                    b.HasKey("CandidatosId", "CompetenciasId");

                    b.HasIndex("CompetenciasId");

                    b.ToTable("CandidatoCompetencias", (string)null);
                });

            modelBuilder.Entity("CandidatoIdioma", b =>
                {
                    b.Property<int>("CandidatosId")
                        .HasColumnType("int");

                    b.Property<int>("IdiomasId")
                        .HasColumnType("int");

                    b.HasKey("CandidatosId", "IdiomasId");

                    b.HasIndex("IdiomasId");

                    b.ToTable("CandidatoIdiomas", (string)null);
                });

            modelBuilder.Entity("SRSRH_EXO.Models.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PuestoId")
                        .HasColumnType("int");

                    b.Property<string>("RecomendadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalarioAspirado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PuestoId");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("SRSRH_EXO.Models.Capacitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHasta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Capacitaciones");
                });

            modelBuilder.Entity("SRSRH_EXO.Models.Competencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Competencias");
                });

            modelBuilder.Entity("SRSRH_EXO.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PuestoId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalarioMensual")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PuestoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("SRSRH_EXO.Models.ExperienciaLaboral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHasta")
                        .HasColumnType("datetime2");

                    b.Property<string>("PuestoOcupado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("ExperienciasLaborales");
                });

            modelBuilder.Entity("SRSRH_EXO.Models.Idioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Idiomas");
                });

            modelBuilder.Entity("SRSRH_EXO.Models.Puesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NivelRiesgo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalarioMaximo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalarioMinimo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("CandidatoCapacitacion", b =>
                {
                    b.HasOne("SRSRH_EXO.Models.Candidato", null)
                        .WithMany()
                        .HasForeignKey("CandidatosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SRSRH_EXO.Models.Capacitacion", null)
                        .WithMany()
                        .HasForeignKey("CapacitacionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CandidatoCompetencia", b =>
                {
                    b.HasOne("SRSRH_EXO.Models.Candidato", null)
                        .WithMany()
                        .HasForeignKey("CandidatosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SRSRH_EXO.Models.Competencia", null)
                        .WithMany()
                        .HasForeignKey("CompetenciasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CandidatoIdioma", b =>
                {
                    b.HasOne("SRSRH_EXO.Models.Candidato", null)
                        .WithMany()
                        .HasForeignKey("CandidatosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SRSRH_EXO.Models.Idioma", null)
                        .WithMany()
                        .HasForeignKey("IdiomasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SRSRH_EXO.Models.Candidato", b =>
                {
                    b.HasOne("SRSRH_EXO.Models.Puesto", "Puesto")
                        .WithMany("Candidatos")
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("SRSRH_EXO.Models.Empleado", b =>
                {
                    b.HasOne("SRSRH_EXO.Models.Puesto", "Puesto")
                        .WithMany("Empleados")
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("SRSRH_EXO.Models.ExperienciaLaboral", b =>
                {
                    b.HasOne("SRSRH_EXO.Models.Candidato", "Candidato")
                        .WithMany("Experiencias")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("SRSRH_EXO.Models.Candidato", b =>
                {
                    b.Navigation("Experiencias");
                });

            modelBuilder.Entity("SRSRH_EXO.Models.Puesto", b =>
                {
                    b.Navigation("Candidatos");

                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
